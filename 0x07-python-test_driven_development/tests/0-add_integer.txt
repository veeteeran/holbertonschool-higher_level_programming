==========================
How to use ``add_integer``
==========================

Numbers
=======

``add_integer(a, b)`` returns the sum of its arguments.

::
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(1, 2)
    3

Default value of second argument is 98
::
    >>> add_integer(2)
    100

It casts floats to ints

::
    >>> add_integer(100.3, -2)
    98

::
    >>> add_integer(5.6689, 6.211)
    11

::
    >>> add_integer(9, 1.234)
    10

::
    >>> add_integer(123.45)
    221

Non-Numbers
===========

Errors when the second argument is not an int or float

::
    >>> print(add_integer())
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

::
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

::
    >>> add_integer("School", 4)
    Traceback (most recent call last):
    TypeError: a must be an integer

The first argument must be an int or float
::
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::
    >>> add_integer(True, 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::
    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

::
    >>> add_integer("Holberton", "School")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer("96", 12)
    Traceback (most recent call last):
    TypeError: a must be an integer

::
    >>> add_integer(4, "28")
    Traceback (most recent call last):
    TypeError: b must be an integer

::
    >>> add_integer("9", "1")
    Traceback (most recent call last):
    TypeError: a must be an integer

::
    >>> add_integer(None, 394820)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer([3, 4], 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

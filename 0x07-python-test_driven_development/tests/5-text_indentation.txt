===============================
 How to Use text_indentation.py
===============================

``text_indentation()`` prints text with two newlines after charaters in list

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
    ... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
    ... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
    ... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
    ... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
    ... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
    ... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
    ... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
    ... beatiorem! Iam ruinas videres""")
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

::

    >>> text_indentation("Hello Holberton")
    Hello Holberton

    >>> text_indentation("spaces at the end?    What's this?")
    spaces at the end?
    <BLANKLINE>
    What's this?
    <BLANKLINE>

    >>> text_indentation("spaces at the end?:What's this.")
    spaces at the end?
    <BLANKLINE>
    :
    <BLANKLINE>
    What's this.
    <BLANKLINE>

::

    >>> text_indentation("   spaces at the end? What's this.")
    spaces at the end?
    <BLANKLINE>
    What's this.
    <BLANKLINE>

::

text must be a string

::

    >>> text_indentation(12345)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(True)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(["List"])
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation((0, 1))
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> tinydict = {'name': 'john','code':6734, 'dept': 'sales'}
    >>> text_indentation(tinydict)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string
